{"root":{"data":{"id":"by2pmnp3vls0","created":1572423552483,"text":"缓存"},"children":[{"data":{"id":"by2pn4uptw80","created":1572423589828,"text":"作用","layout":null},"children":[]},{"data":{"id":"by2pn9v14yw0","created":1572423600731,"text":"分类","layout":null},"children":[{"data":{"id":"by2pncs32o80","created":1572423607083,"text":"redis","layout":null},"children":[]},{"data":{"id":"by2pnes1tpc0","created":1572423611434,"text":"memcache","layout":null},"children":[]},{"data":{"id":"bydte5q0xnk0","created":1573551330406,"text":"区别","note":"### Redis 支持复杂的数据结构：\nRedis 相比 Memcached 来说，拥有更多的数据结构，能支持更丰富的数据操作。如果需要缓存能够支持更复杂的结构和操作， Redis 会是不错的选择。\n\n### Redis 原生支持集群模式：\n在 redis3.x 版本中，便能支持 Cluster 模式，而 Memcached 没有原生的集群模式，需要依靠客户端来实现往集群中分片写入数据。\n\n### 性能对比：\n由于 Redis 只使用单核，而 Memcached 可以使用多核，所以平均每一个核上 Redis 在存储**小数据**时比 Memcached 性能更高。而在 **100k** 以上的数据中，Memcached 性能要高于 Redis，虽然 Redis 最近也在存储大数据的性能上进行优化，但是比起 Remcached，还是稍有逊色。\n"},"children":[]}]},{"data":{"id":"by2pnjauszs0","created":1572423621280,"text":"常见问题","layout":null,"hyperlink":"https://juejin.im/post/5dbef8306fb9a0203f6fa3e2","hyperlinkTitle":""},"children":[{"data":{"id":"by2pnr4a7ds0","created":1572423638296,"text":"缓存雪崩","layout":null,"font-size":18,"font-weight":"bold","font-family":"微软雅黑,Microsoft YaHei","background":"#92cddc"},"children":[{"data":{"id":"bydrrqbj3w00","created":1573546751757,"text":"定义","layout":null,"background":"#ffff00"},"children":[{"data":{"id":"bydrvtbugg80","created":1573547071763,"text":"1. 缓存同一时间大面积失效，请求全部直接打到 DB\n2. 大面积的缓存失效，打崩了DB","layout":null},"children":[]}]},{"data":{"id":"bydrt4s9pb40","created":1573546861608,"text":"解决","layout":null,"background":"#ffff00"},"children":[{"data":{"id":"bydrt90yyw00","created":1573546870841,"text":"1. 把每个Key的失效时间都加个随机值，    \n可以保证数据不会在同一时间大面积失效","layout":null},"children":[]},{"data":{"id":"bydrtio4src0","created":1573546891833,"text":"2. 集群部署，将热点数据均匀分布在不同的Redis库中","layout":null},"children":[]},{"data":{"id":"bydrumrdxbc0","created":1573546979101,"text":"3. 设置热点数据永远不过期，有更新操作就更新缓存","layout":null},"children":[]}]}]},{"data":{"id":"by2pnn3v8140","created":1572423629563,"text":"缓存穿透","layout":null,"font-size":18,"font-weight":"bold","font-family":"微软雅黑,Microsoft YaHei","background":"#92cddc"},"children":[{"data":{"id":"bydrvibxp9k0","created":1573547047824,"text":"定义","layout":null,"background":"#ffff00"},"children":[{"data":{"id":"bydrvmcjgo80","created":1573547056567,"text":"缓存穿透是指缓存和数据库中都没有的数据，\n而用户不断发起请求","layout":null},"children":[]}]},{"data":{"id":"bydrw7abd940","created":1573547102145,"text":"解决","layout":null,"background":"#ffff00"},"children":[{"data":{"id":"bydry6h3ehk0","created":1573547257107,"text":"1. 在接口层增加校验，比如用户鉴权校验，\n参数做校验，不合法的参数直接代码Return，\n比如：id 做基础校验，id <=0的直接拦截等","layout":null},"children":[]},{"data":{"id":"bydrzie621k0","created":1573547361415,"text":"2. Redis还有一个高级用法布隆过滤器（Bloom Filter）","layout":null},"children":[]}]}]},{"data":{"id":"bydrqrugr1c0","created":1573546676714,"text":"缓存击穿","layout":null,"font-size":18,"font-weight":"bold","font-family":"微软雅黑,Microsoft YaHei","background":"#92cddc"},"children":[{"data":{"id":"bydrw97ko5c0","created":1573547106333,"text":"定义","layout":null,"background":"#ffff00"},"children":[{"data":{"id":"bydrx54dt4o0","created":1573547175797,"text":"指一个Key非常热点，在不停的扛着大并发，\n大并发集中对这一个点进行访问，当这个Key在失效的瞬间，\n持续的大并发就穿破缓存，直接请求数据库，\n就像在一个完好无损的桶上凿开了一个洞","layout":null},"children":[]}]},{"data":{"id":"bydrwb6zmtk0","created":1573547110651,"text":"解决","layout":null,"background":"#ffff00"},"children":[{"data":{"id":"bydrzsusllc0","created":1573547384188,"text":"1. 设置热点数据永远不过期","layout":null},"children":[]},{"data":{"id":"bydrzy79qhc0","created":1573547395827,"text":"2. 加上互斥锁","layout":null},"children":[]}]}]}]}]},"template":"right","theme":"fish","version":"1.4.43"}